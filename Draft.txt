***********************************************Patterns that i should code**********************************************************
Abstract Factory Pattern
Iterator
State:Game. Make the character to walk,talk,run,fight. Pass command and change the state. Change state A-> B, A->A 
Decorator
Bridge
************************************************************************************************************************************
update "Happens Before"

Why wait(), notify() and notifyAll() are in Object Class ?

************************************************************************************************************************************
Sometimes type casts are unavoidable and in Generic code they happen often without the programmer ever noticing. Therefore, significant effort was made to make type cast quite fast.

Telescoping constructor pattern: One constructor with only required fields and many other construtors with different combinations of optional fields. Difficult to mantain and bug prone.

JavaBeans Pattern: One constructor with only required fields and setters for all other optional patterns. Inconsistant state and supports mutability.

************************************************************************************************************************************
Streams :

maps
filters

Terminal operators:
	forEach
	Collec()
	
A Priority Queue is different from a normal queue, because instead of being a “first-in-first-out”, values come out in order by priority. 
************************************************************************************************************************************