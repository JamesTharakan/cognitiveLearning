***********************************************Patterns that i should code**********************************************************
Abstract Factory Pattern
Iterator
State:Game. Make the character to walk,talk,run,fight. Pass command and change the state. Change state A-> B, A->A 
Decorator
Bridge

************************************************************************************************************************************
update "Happens Before" 

What is Mutex, Semaphore and Mutex

Why wait(), notify() and notifyAll() are in Object Class ?

What is ThreadGroup 

Analyzed Thread Dumps

************************************************************************************************************************************
Sometimes type casts are unavoidable and in Generic code they happen often without the programmer ever noticing. Therefore, significant effort was made to make type cast quite fast.


Telescoping constructor pattern: One constructor with only required fields and many other construtors with different combinations of optional fields. Difficult to mantain and bug prone.

JavaBeans Pattern: One constructor with only required fields and setters for all other optional patterns. Inconsistant state and supports mutability.
************************************************************************************************************************************
************************************************************************************************************************************
If the mapping for a given key doesn't exist, or its value is null, it associates the key with the provided value(second parameter). 
Otherwise, it calculates a new value using the remapping function and updates the mapping accordingly. In the below case it is calling sum() in Long class. So, the value is 

Map<T, Long> addToValue = new HashMap<>();
inputList.forEach(e -> resultMap.merge(e, 1L, Long::sum));